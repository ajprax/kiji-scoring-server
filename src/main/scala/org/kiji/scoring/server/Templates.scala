/**
 * (c) Copyright 2013 WibiData, Inc.
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.kiji.scoring.server

import org.kiji.annotations.ApiAudience
import org.kiji.annotations.ApiStability

/** Provides templates for configuration files and JSON server responses. */
@ApiAudience.Framework
@ApiStability.Experimental
object Templates {
  private val InitParamTemplate =
    """    <init-param>
      |      <param-name>%s</param-name>
      |      <param-value>%s</param-value>
      |    </init-param>
    """.stripMargin

  private def generateInitParam(name: String, value: String): String =
    InitParamTemplate.format(name, value)

  // -----------------------------------------------------------------------------------------------

  private val WebOverlayTemplate =
    """<?xml version="1.0" encoding="ISO-8859-1" ?>
      |<!--
      | * (c) Copyright 2013 WibiData, Inc.
      | *
      | * See the NOTICE file distributed with this work for additional
      | * information regarding copyright ownership.
      | *
      | * Licensed under the Apache License, Version 2.0 (the "License");
      | * you may not use this file except in compliance with the License.
      | * You may obtain a copy of the License at
      | *
      | *     http://www.apache.org/licenses/LICENSE-2.0
      | *
      | * Unless required by applicable law or agreed to in writing, software
      | * distributed under the License is distributed on an "AS IS" BASIS,
      | * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      | * See the License for the specific language governing permissions and
      | * limitations under the License.
      |-->
      |
      |<!--
      |  NOTE: This file is autogenerated. Please do not modify.
      |
      |  Contains the web application configuration for the individual scoring instance. This
      |  relies on a generic scoring servlet and parameterizes this with information so that this
      |  servlet
      |  can retrieve environment/definition configuration from the model repository.
      | -->
      |
      |<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
      |         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      |         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun
      |         .com/xml/ns/j2ee/web-app_2_4.xsd"
      |         version="2.4">
      |
      |  <display-name>%s</display-name>
      |  <description>Dynamically generated scoring application.</description>
      |
      |  <servlet>
      |    <servlet-name>%s</servlet-name>
      |    <servlet-class>org.kiji.scoring.server.servlets.GenericScoringServlet</servlet-class>
      |    %s
      |    <load-on-startup>1</load-on-startup>
      |  </servlet>
      |
      |  <servlet-mapping>
      |    <servlet-name>%s</servlet-name>
      |    <url-pattern>/</url-pattern>
      |  </servlet-mapping>
      |</web-app>
      |
    """.stripMargin

  def generateWebOverlayXml(modelName: String, params: Map[String, String]): String =
    WebOverlayTemplate.format(
      modelName,
      modelName,
      params.map((generateInitParam _).tupled).mkString(""),
      modelName
    )

  // -----------------------------------------------------------------------------------------------

  private val WebXmlTemplate =
    """<?xml version="1.0" encoding="ISO-8859-1" ?>
      |<!--
      |* (c) Copyright 2013 WibiData, Inc.
      |*
      |* See the NOTICE file distributed with this work for additional
      |* information regarding copyright ownership.
      |*
      |* Licensed under the Apache License, Version 2.0 (the "License");
      |* you may not use this file except in compliance with the License.
      |* You may obtain a copy of the License at
      |*
      |*     http://www.apache.org/licenses/LICENSE-2.0
      |*
      |* Unless required by applicable law or agreed to in writing, software
      |* distributed under the License is distributed on an "AS IS" BASIS,
      |* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      |* See the License for the specific language governing permissions and
      |* limitations under the License.
      |-->
      |
      |<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
      |         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      |         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
      |         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
      |         version="2.4">
      |%s
      |</web-app>
    """.stripMargin

  private val ServletTemplate =
    """  <servlet>
      |    <servlet-name>%s</servlet-name>
      |    <servlet-class>%s</servlet-class>
      |    <load-on-startup>0</load-on-startup>
      |    %s
      |  </servlet>
      |  <servlet-mapping>
      |    <servlet-name>%s</servlet-name>
      |    <url-pattern>%s</url-pattern>
      |  </servlet-mapping>
    """.stripMargin

  def generateServletConfigForWebXml(
    name: String,
    servletClass: String,
    urlPattern: String,
    initParams: Map[String, String]
  ): String = {
    ServletTemplate.format(
      name,
      servletClass,
      initParams.map((generateInitParam _).tupled).mkString(""),
      name,
      urlPattern
    )
  }

  def generateWebXml(servlets: Set[String]): String = {
    WebXmlTemplate.format(servlets.mkString(""))
  }

  // -----------------------------------------------------------------------------------------------

  private val OverlayXmlTemplate =
    """<?xml version="1.0"  encoding="ISO-8859-1"?>
      |<!--
      | * (c) Copyright 2013 WibiData, Inc.
      | *
      | * See the NOTICE file distributed with this work for additional
      | * information regarding copyright ownership.
      | *
      | * Licensed under the Apache License, Version 2.0 (the "License");
      | * you may not use this file except in compliance with the License.
      | * You may obtain a copy of the License at
      | *
      | *     http://www.apache.org/licenses/LICENSE-2.0
      | *
      | * Unless required by applicable law or agreed to in writing, software
      | * distributed under the License is distributed on an "AS IS" BASIS,
      | * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      | * See the License for the specific language governing permissions and
      | * limitations under the License.
      |-->
      |
      |<!--
      |  NOTE: This file is autogenerated. Please do not modify.
      |
      |  This contains the context level configuration for the given instance. For now, we just set
      |  the context path so that it's HTTP accessible by a well known location.
      |-->
      |<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN"
      |  "http://www.eclipse.org/jetty/configure.dtd">
      |<Configure class="org.eclipse.jetty.webapp.WebAppContext">
      |  <Set name="contextPath">/%s</Set>
      |</Configure>
    """.stripMargin

  def generateOverlayXml(contextPath: String): String = OverlayXmlTemplate.format(contextPath)

  // -----------------------------------------------------------------------------------------------

  private val MapTemplate =
    """{
      |%s
      |}""".stripMargin

  private val MapEntryTemplate =
    """  {"%s":"%s"}""".stripMargin

  def mapToJson(map: Map[_ <: Any, _ <: Any]): String = MapTemplate.format(
      map.map { kv: (Any, Any) => MapEntryTemplate.format(kv._1, kv._2) }.mkString("\n"))

  // -----------------------------------------------------------------------------------------------

  private val IterableTemplate = "[s]"

  private val IterableEntryTemplate = """"%s""""

  def iterableToJson(iterable: Iterable[_ <: Any]): String = IterableTemplate.format(
      iterable.map { e: Any => IterableEntryTemplate.format(e) }.mkString(",\n"))

  // -----------------------------------------------------------------------------------------------

  private val TemplateXmlTemplate =
    """<?xml version="1.0"  encoding="ISO-8859-1"?>
      |<!--
      | * (c) Copyright 2013 WibiData, Inc.
      | *
      | * See the NOTICE file distributed with this work for additional
      | * information regarding copyright ownership.
      | *
      | * Licensed under the Apache License, Version 2.0 (the "License");
      | * you may not use this file except in compliance with the License.
      | * You may obtain a copy of the License at
      | *
      | *     http://www.apache.org/licenses/LICENSE-2.0
      | *
      | * Unless required by applicable law or agreed to in writing, software
      | * distributed under the License is distributed on an "AS IS" BASIS,
      | * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      | * See the License for the specific language governing permissions and
      | * limitations under the License.
      |-->
      |
      |<!--
      |  NOTE: This file is autogenerated. Please do not modify.
      |
      |  Contains static configuration for the Jetty template setup.
      |-->
      |<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN"
      |  "http://www.eclipse.org/jetty/configure.dtd">
      |<Configure class="org.eclipse.jetty.overlays.TemplateContext">
      |  <Get name="resourceCache">
      |    <Set name="useFileMappedBuffer">true</Set>
      |    <Set name="maxCachedFileSize">10000000</Set>
      |    <Set name="maxCachedFiles">10000</Set>
      |    <Set name="maxCacheSize">64000000</Set>
      |  </Get>
      |</Configure>
    """.stripMargin

  def generateTemplateXml(): String = TemplateXmlTemplate
}
